// <auto-generated />
using System;
using CSOLiberty.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CSOLiberty.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20210508070451_setup")]
    partial class setup
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.5")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CSOLiberty.Models.Client", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("client_id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("client_fname");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("client_lname");

                    b.HasKey("ID");

                    b.ToTable("Clients");
                });

            modelBuilder.Entity("CSOLiberty.Models.Order", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("order_id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Amount")
                        .HasColumnType("float")
                        .HasColumnName("order_amount");

                    b.Property<int>("ClientID")
                        .HasColumnType("int")
                        .HasColumnName("order_client_id");

                    b.Property<DateTime>("Date")
                        .HasColumnType("date")
                        .HasColumnName("order_date");

                    b.Property<int?>("ParentID")
                        .HasColumnType("int")
                        .HasColumnName("order_parent_id");

                    b.Property<int>("SellerID")
                        .HasColumnType("int")
                        .HasColumnName("order_seller_id");

                    b.HasKey("ID");

                    b.HasIndex("ClientID");

                    b.HasIndex("ParentID");

                    b.HasIndex("SellerID");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("CSOLiberty.Models.Seller", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("seller_id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("BossID")
                        .HasColumnType("int")
                        .HasColumnName("seller_boss_id");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("seller_fname");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("seller_lname");

                    b.HasKey("ID");

                    b.HasIndex("BossID");

                    b.ToTable("Sellers");
                });

            modelBuilder.Entity("CSOLiberty.Models.Order", b =>
                {
                    b.HasOne("CSOLiberty.Models.Client", "Client")
                        .WithMany("Orders")
                        .HasForeignKey("ClientID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CSOLiberty.Models.Order", "Parent")
                        .WithMany("Children")
                        .HasForeignKey("ParentID");

                    b.HasOne("CSOLiberty.Models.Seller", "Seller")
                        .WithMany("Orders")
                        .HasForeignKey("SellerID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");

                    b.Navigation("Parent");

                    b.Navigation("Seller");
                });

            modelBuilder.Entity("CSOLiberty.Models.Seller", b =>
                {
                    b.HasOne("CSOLiberty.Models.Seller", "Boss")
                        .WithMany("Employees")
                        .HasForeignKey("BossID")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("Boss");
                });

            modelBuilder.Entity("CSOLiberty.Models.Client", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("CSOLiberty.Models.Order", b =>
                {
                    b.Navigation("Children");
                });

            modelBuilder.Entity("CSOLiberty.Models.Seller", b =>
                {
                    b.Navigation("Employees");

                    b.Navigation("Orders");
                });
#pragma warning restore 612, 618
        }
    }
}
